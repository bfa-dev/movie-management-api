name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.1
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ env.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Configure Docker
      run: gcloud auth configure-docker

    - name: Build and push Docker image
      run: |
        docker build -t gcr.io/${{ env.PROJECT_ID }}/movie-management-api:${{ github.sha }} .
        docker push gcr.io/${{ env.PROJECT_ID }}/movie-management-api:${{ github.sha }}
        - name: Deploy to Cloud Run
        run: |
          gcloud run deploy movie-management-api \
            --image gcr.io/${{ env.PROJECT_ID }}/movie-management-api:${{ github.sha }} \
            --platform managed \
            --region europe-west1 \
            --allow-unauthenticated \
            --set-env-vars="NODE_ENV=prod,DATABASE_URL=${{ secrets.DATABASE_URL }},JWT_SECRET=${{ secrets.JWT_SECRET }},JWT_EXPIRATION_TIME=${{ secrets.JWT_EXPIRATION_TIME }},INITIAL_MANAGER_EMAIL=${{ secrets.INITIAL_MANAGER_EMAIL }},INITIAL_MANAGER_PASSWORD=${{ secrets.INITIAL_MANAGER_PASSWORD }},INITIAL_MANAGER_USERNAME=${{ secrets.INITIAL_MANAGER_USERNAME }},INITIAL_USER_EMAIL=${{ secrets.INITIAL_USER_EMAIL }},INITIAL_USER_PASSWORD=${{ secrets.INITIAL_USER_PASSWORD }},INITIAL_USER_USERNAME=${{ secrets.INITIAL_USER_USERNAME }}"